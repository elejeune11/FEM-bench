{
    "function_imports": [
    "numpy"
    ],
    "compute_1d_linear_shape_functions": "def compute_1d_linear_shape_functions(xi: float) -> np.ndarray:\n    """Compute the 1D linear shape functions for a two-node element.\n    The linear shape functions are defined as:\n      N1(xi) = 0.5 * (1 - xi)\n      N2(xi) = 0.5 * (1 + xi)\n\n    Args:\n        xi (float): The natural coordinate in the range [-1, 1].\n\n    Returns:\n        np.ndarray: A numpy array containing the shape functions [N1, N2].\n    """\n    return 0.5 * np.array([1.0 - xi, 1.0 + xi])",
    "test_imports": [
    "pytest",
    "numpy"
    ],
    "test_partition_of_unity": "def test_partition_of_unity():\n    """Test that the sum of the linear shape functions is unity for several xi values."""\n    for xi in np.linspace(-1, 1, 11):\n        N = compute_1d_linear_shape_functions(xi)\n        np.testing.assert_allclose(np.sum(N), 1.0, atol=1e-8)"
    }
