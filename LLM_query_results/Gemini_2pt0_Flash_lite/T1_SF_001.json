{
    "function_imports": [
      "numpy"
    ],
    "shape_functions_1D_linear": "def shape_functions_1D_linear(xi: float) -> (2,):\n    import numpy as np\n    N1 = 0.5 * (1 - xi)\n    N2 = 0.5 * (1 + xi)\n    return np.array([N1, N2])",
    "test_imports": [
      "pytest",
      "numpy"
    ],
    "test_partition_of_unity": "def test_partition_of_unity():\n    import numpy as np\n    from shape_functions_1D_linear import shape_functions_1D_linear\n    xi_values = np.linspace(-1, 1, 100)\n    for xi in xi_values:\n        N = shape_functions_1D_linear(xi)\n        assert np.isclose(np.sum(N), 1.0), f\"Partition of unity failed for xi = {xi}\"",
    "test_interpolation_property": "def test_interpolation_property():\n    import numpy as np\n    from shape_functions_1D_linear import shape_functions_1D_linear\n    # Check at node 1 (xi = -1)\n    N = shape_functions_1D_linear(-1.0)\n    assert np.isclose(N[0], 1.0) and np.isclose(N[1], 0.0), \"Interpolation property failed at node 1\"\n    # Check at node 2 (xi = 1)\n    N = shape_functions_1D_linear(1.0)\n    assert np.isclose(N[0], 0.0) and np.isclose(N[1], 1.0), \"Interpolation property failed at node 2\"",
    "test_completeness": "def test_completeness():\n    import numpy as np\n    from shape_functions_1D_linear import shape_functions_1D_linear\n    xi_values = np.linspace(-1, 1, 10)\n    for xi in xi_values:\n      N = shape_functions_1D_linear(xi)\n      assert N[0] >=0.0 and N[1] >= 0.0, f\"Completeness property violated for xi = {xi}\"",
    "test_known_values": "def test_known_values():\n    import numpy as np\n    from shape_functions_1D_linear import shape_functions_1D_linear\n    # Test at xi = 0\n    N = shape_functions_1D_linear(0.0)\n    assert np.allclose(N, [0.5, 0.5]), \"Known value test failed at xi = 0\"\n    # Test at xi = -0.5\n    N = shape_functions_1D_linear(-0.5)\n    assert np.allclose(N, [0.75, 0.25]), \"Known value test failed at xi = -0.5\"\n    # Test at xi = 0.5\n    N = shape_functions_1D_linear(0.5)\n    assert np.allclose(N, [0.25, 0.75]), \"Known value test failed at xi = 0.5\""
  }